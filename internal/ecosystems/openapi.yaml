openapi: 3.1.1
info:
  title: Sentinel Auth Backend
  version: 0.0.1
paths:
  /auth/providers:
    get:
      summary: Get all available providers that a user can sign in with by client id
      parameters:
        - name: client_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched providers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StrippedClientProvider'
                  
  /auth/providers/email/register:
    post:
      summary: Registers a user if email not taken and password meets security requirements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRegistrationRequest'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCodeResponse'
        '400':
          description: Invalid request or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /auth/providers/email/login:
    post:
      summary: Logs in a user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLoginRequest'
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCodeResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/token:
    post:
      summary: Swap auth token from sign in methods for access, identity, and refresh tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
      responses:
        '200':
          description: Successful exchange of code for tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenTokensResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh:
    post:
      summary: Get new access and identity tokens through refresh token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRefreshRequest'
      responses:
        '200':
          description: Successful exchange of code for tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRefreshTokensResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  schemas:
    StrippedClientProvider:
      type: object
      properties:
        id:
          type: string
        client_id:
          type: string
        provider_option:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            logo_url:
              type: string
            description:
              type: string
        data:
          type: object
          nullable: true

    AuthTokenRequest:
      type: object
      required:
        - code
        - client_id
      properties:
        code:
          type: string
          description: Auth code returned from sign in and sign up methods for sentinel tokens
        client_id:
          type: string
    AuthTokenTokensResponse:
      type: object
      required:
        - access_token
        - id_token
        - refresh_token
      properties:
        access_token:
          type: string
        id_token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer


    AuthRefreshRequest:
      type: object
      required:
        - refresh_token
        - client_id
      properties:
        refresh_token:
          type: string
          description: A refresh token issued for the client_id
        client_id:
          type: string
    AuthRefreshTokensResponse:
      type: object
      required:
        - access_token
        - id_token
      properties:
        access_token:
          type: string
        id_token:
          type: string
        expires_in:
          type: integer


    EmailRegistrationRequest:
      type: object
      required:
        - email
        - password
        - client_id
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password (must meet security requirements)
        client_id:
          type: string
          description: Client application ID
        redirect_uri:
          type: string
          format: uri
          description: URI to redirect after authentication
        metadata:
          type: object
          description: Additional registration metadata
          
    EmailLoginRequest:
      type: object
      required:
        - email
        - password
        - client_id
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password
        client_id:
          type: string
          description: Client application ID
        redirect_uri:
          type: string
          format: uri
          description: URI to redirect after authentication
          
    AuthCodeResponse:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Authentication code to be exchanged for tokens
        expires_in:
          type: integer
          description: Code expiration time in seconds
          default: 600
  
    ErrorResponse:
      type: object
      required:
        - error
        - error_description
      properties:
        error:
          type: string
          description: Error code
        error_description:
          type: string
          description: Human-readable error description